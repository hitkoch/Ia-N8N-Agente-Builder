## Objetivo: Criar uma Interface de Usu√°rio Completa para Gerenciamento de WhatsApp

Atualize a interface da plataforma para incluir uma se√ß√£o dedicada ao gerenciamento da integra√ß√£o com o WhatsApp. Isso envolve adicionar um novo item de menu na sidebar e criar uma nova p√°gina de gerenciamento com todos os recursos necess√°rios, como cria√ß√£o de inst√¢ncias, visualiza√ß√£o de QR Code, status da conex√£o e estat√≠sticas.

---

### **PARTE 1: ATUALIZA√á√ÉO DA SIDEBAR DE NAVEGA√á√ÉO**

**A√ß√£o:** Modifique o `public/dashboard.html` (ou o arquivo que cont√©m a sidebar principal).

1.  **Adicione um Novo Item de Menu:**
    *   Na lista de navega√ß√£o da sidebar, adicione um novo link chamado **"WhatsApp"**.
    *   Este link deve apontar para uma nova p√°gina: `<a href="/whatsapp.html">WhatsApp</a>`.
    *   Adicione um √≠cone apropriado (pode ser da Font Awesome ou um emoji üì±).

---

### **PARTE 2: CRIA√á√ÉO DA P√ÅGINA DE GERENCIAMENTO (`whatsapp.html`)**

**A√ß√£o:** Crie um novo conjunto de arquivos: `public/whatsapp.html`, e adicione os estilos em `public/css/style.css` e a l√≥gica em `public/js/whatsapp-manager.js`.

**2.1. Estrutura do `public/whatsapp.html`:**
Esta p√°gina ser√° o hub central para tudo relacionado ao WhatsApp.

*   **Layout:** Use o mesmo layout do `dashboard.html` (com a sidebar e a √°rea de conte√∫do principal) para manter a consist√™ncia.
*   **Cabe√ßalho da P√°gina:** T√≠tulo `<h1>` "Gerenciador de Conex√£o - WhatsApp".
*   **Sele√ß√£o de Agente:**
    *   No topo, adicione um menu suspenso (`<select id="agent-selector">`) com o texto "Selecione um Agente para Gerenciar". Este √© o primeiro passo para o usu√°rio.
*   **√Årea de Gerenciamento Principal (`<div id="management-area" class="hidden">`):**
    *   Esta √°rea deve ficar escondida (`display: none;`) at√© que um agente seja selecionado.
    *   **Estado 1: Sem Conex√£o (Padr√£o)**
        *   Mostre um card ou uma se√ß√£o com um t√≠tulo "Nenhuma conex√£o encontrada para este agente."
        *   Um bot√£o grande e chamativo: **`+ Criar Nova Inst√¢ncia do WhatsApp`** com o ID `create-instance-btn`.
    *   **Estado 2: Com Conex√£o (Exibido dinamicamente)**
        *   Esta se√ß√£o deve substituir o Estado 1 quando uma inst√¢ncia existir.
        *   Use um layout de grid ou cards para exibir as seguintes informa√ß√µes:
            *   **Card de Status:**
                *   T√≠tulo: "Status da Conex√£o"
                *   Elemento de status com ID `connection-status`: (ex: `<span class="status-dot disconnected"></span> Desconectado`).
                *   Nome da Inst√¢ncia: `<span>` com ID `instance-name`.
            *   **Card do QR Code:**
                *   T√≠tulo: "Escanear para Conectar"
                *   Uma √°rea de placeholder (`<div id="qrcode-container">`) que conter√° a imagem do QR Code (`<img>`) ou uma mensagem de "Conectado".
                *   Um bot√£o "Gerar Novo QR Code" com ID `refresh-qrcode-btn`.
            *   **Card de Estat√≠sticas (Placeholders):**
                *   T√≠tulo: "Uso (√öltimos 30 dias)"
                *   "Mensagens Recebidas": `<span>` com ID `stats-received`.
                *   "Mensagens Enviadas": `<span>` com ID `stats-sent`.
            *   **Card de A√ß√µes:**
                *   T√≠tulo: "Gerenciamento da Inst√¢ncia"
                *   Bot√£o "Editar Inst√¢ncia" (pode abrir um modal com configura√ß√µes).
                *   Bot√£o **"Desconectar e Excluir Inst√¢ncia"** (com uma cor de perigo, como vermelho).

**2.2. Estilos no `style.css`:**
*   Adicione estilos para a nova p√°gina `whatsapp.html`.
*   Crie uma classe `.status-dot` que pode ter modificadores `.connected` (cor verde) e `.disconnected` (cor vermelha).
*   Estilize os cards de gerenciamento para que fiquem limpos e organizados.
*   Adicione um estilo para a classe `.hidden` (`display: none !important;`).

**2.3. L√≥gica Completa em `public/js/whatsapp-manager.js`:**
Este script orquestrar√° toda a interatividade da p√°gina.

*   **Inicializa√ß√£o (`window.onload`):**
    1.  Verifique o token JWT. Se n√£o existir, redirecione para o login.
    2.  Fa√ßa um `fetch` para `GET /api/agents` para buscar todos os agentes do usu√°rio.
    3.  Popule o menu suspenso `#agent-selector` com os agentes retornados.

*   **Evento `change` no `#agent-selector`:**
    1.  Quando um agente √© selecionado, pegue o `agentId`.
    2.  Mostre a `#management-area`.
    3.  Chame uma fun√ß√£o `fetchInstanceDetails(agentId)` para buscar os dados da conex√£o daquele agente.

*   **Fun√ß√£o `fetchInstanceDetails(agentId)`:**
    1.  Fa√ßa um `fetch` para `GET /api/whatsapp/${agentId}/instance`.
    2.  **Se a resposta for 404 (sem inst√¢ncia):** mostre o "Estado 1" (bot√£o "Criar Inst√¢ncia").
    3.  **Se a resposta for 200 (inst√¢ncia existe):**
        *   Mostre o "Estado 2" (cards de gerenciamento).
        *   Chame uma fun√ß√£o `updateUI(data)` para preencher todos os campos: status, nome da inst√¢ncia, estat√≠sticas (placeholders por enquanto).
        *   Se `data.qrCode` existir, exiba a imagem do QR Code. Caso contr√°rio, mostre uma mensagem "Conectado".

*   **Evento `click` no `#create-instance-btn`:**
    1.  Pegue o `agentId` selecionado.
    2.  Fa√ßa um `fetch` para `POST /api/whatsapp/${agentId}/instance`.
    3.  Ap√≥s o sucesso, chame `fetchInstanceDetails(agentId)` novamente para atualizar a UI para o "Estado 2" e exibir o primeiro QR Code.
    4.  Inicie um loop de polling (usando `setInterval`) que chama `fetchInstanceDetails(agentId)` a cada 10 segundos para verificar se o status mudou para "Conectado".

*   **Evento `click` no `#refresh-qrcode-btn`:**
    *   Pode simplesmente chamar `fetchInstanceDetails(agentId)` novamente, pois a l√≥gica do backend para gerar um novo QR Code j√° est√° no endpoint GET se a inst√¢ncia estiver desconectada.

*   **Fun√ß√£o `updateUI(data)`:**
    *   Uma fun√ß√£o central que recebe os dados da inst√¢ncia e atualiza todos os elementos do DOM (`#connection-status`, `#instance-name`, `#qrcode-container`, etc.). Isso evita repeti√ß√£o de c√≥digo.

---